function config($stateProvider,$urlRouterProvider,RestangularProvider){RestangularProvider.setBaseUrl("https://leancloud.cn/1.1"),RestangularProvider.setDefaultHeaders({"X-AVOSCloud-Application-Id":"zXmsYkXYionV4s9pHc3IKghD","X-AVOSCloud-Application-Key":"gHmRen4R5I3ziAE7wcP7vKw1"})}function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("app/blank"),$stateProvider.state("signin",{url:"/signin",templateUrl:"modules/signin/signin.html"})}function dataService(Restangular){function getAll(subRouter,queryParams,successCall,errorCall){var getRouter=baseRouter.one(subRouter);getRouter.get(queryParams).then(function(data){successCall(data)},function(error){errorCall(error)})}function get(subRouter,queryParams,successCall,errorCall){var getRouter=baseRouter.one(subRouter);getRouter.get(queryParams).then(function(data){successCall(data)},function(error){errorCall(error)})}function update(subRouter,objId,queryParams,successCall){console.log(queryParams);var singleRouter=baseRouter.one(subRouter,objId);singleRouter.customPUT(queryParams,null,null,header).then(function(data){successCall(data)},function(error){})}function save(subRouter,subObejct,successCall){console.log("save object"),baseRouter.post(subRouter,subObejct,null,header).then(function(data){successCall(data)},function(error){console.log(error)})}function del(subRouter,objId,queryParams,successCall){var singleRouter=baseRouter.one(subRouter,objId);singleRouter.remove(queryParams,header).then(function(data){successCall(data)},function(error){console.log(error)})}var header={"Content-Type":"application/json"},baseRouter=Restangular.one("classes"),service={getAll:getAll,get:get,update:update,del:del,save:save};return service}function usersService(Restangular){function get(queryParams,successCall,errorCall){baseRouter.get(queryParams).then(function(data){successCall(data)},function(error){errorCall(error)})}function save(subRouter,subObejct){console.log("save object"),baseRouter.post(subRouter,subObejct,null,header).then(function(data){console.log(data)},function(error){console.log(error)})}var header={"Content-Type":"application/json"},baseRouter=Restangular.one("users"),service={get:get,save:save};return service}function rockUtil($modal,Restangular){function openEditModal(editObj,type,templateUrl,sucCallback){var targetEditObject={};if("edit"==type&&1!=editObj.length)alert("务必选择一行数据");else{console.log(type),"edit"==type&&(targetEditObject=angular.copy(editObj[0]));$modal.open({animation:!0,templateUrl:templateUrl,resolve:{operatOpts:function(){var obj={};return obj.editObj=targetEditObject,"add"==type&&(obj.oprTitle="新增"),"edit"==type&&(obj.oprTitle="编辑"),obj}},controller:function($scope,$modalInstance,operatOpts){$scope.operatOpts=operatOpts,$scope.ok=function(){sucCallback(operatOpts.editObj),$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}})}}var service={openEditModal:openEditModal};return service}function mainCtrl(appName,$scope){$scope.appName=appName}function appConfig($stateProvider){$stateProvider.state("app",{url:"/app","abstract":!0,templateUrl:"modules/component/app/app.html",controller:"app"}).state("app.blank",{url:"/blank",views:{appContentView:{templateUrl:"modules/component/blank/blank.html"}}})}function app(menus,$scope){function activate(){console.log("load app controller success")}$scope.menus=menus,activate()}function appHeader($state,appName,$scope){function direct(menu,index){$scope.data.selectMenu=index,$state.go(menu.url,{menus:menu.subMenus})}$scope.appName=appName,$scope.direct=direct,$scope.data={}}function appSider($stateParams,$state,$scope){function activate(){$scope.$broadcast("collapseAll")}function collapseTree(){$scope.$broadcast("collapseAll")}function toggle(scope){console.log("toggle"),scope.collapsed&&scope.collapseAll(),scope.toggle()}function direct(menu){$scope.data.selectMenu=menu,$state.go(menu.url)}$scope.data={},$scope.data.menus=$stateParams.menus,$scope.data.toggle=toggle,$scope.data.direct=direct,$scope.data.collapseTree=collapseTree,$scope.data.selectMenu,activate()}function contentMgConfig($stateProvider){$stateProvider.state("app.contentMg",{url:"/contentMg",params:{menus:null},views:{appContentView:{templateUrl:"modules/contentMg/contentMg.html",controller:"contentMg"}}}).state("app.contentMg.activityMg",{url:"/activityMg",views:{centerBoard:{templateUrl:"modules/contentMg/activityMg/activityMg.html",controller:"activityMg"}}}).state("app.contentMg.styleMg",{url:"/styleMg",views:{centerBoard:{templateUrl:"modules/contentMg/styleMg/styleMg.html",controller:"styleMg"}}}).state("app.contentMg.quoteMg",{url:"/quoteMg",views:{centerBoard:{templateUrl:"modules/contentMg/quoteMg/quoteMg.html",controller:"quoteMg"}}}).state("app.contentMg.projectMg",{url:"/projectMg",views:{centerBoard:{templateUrl:"modules/contentMg/projectMg/projectMg.html",controller:"projectMg"}}}).state("app.contentMg.subscribeMg",{url:"/subscribeMg",views:{centerBoard:{templateUrl:"modules/contentMg/subscribeMg/subscribeMg.html",controller:"subscribeMg"}}})}function contentMg($scope){function activate(){}activate()}function activityMg($scope){function activate(){console.log("load activityMg controller success")}activate()}function projectMg($scope){function activate(){console.log("load projectMg controller success")}activate()}function quoteMg($scope){function activate(){console.log("load quoteMg controller success")}activate()}function styleMg(Style,gridOpts,uiGridConstants,dataService,rockUtil,$scope){function activate(){getAllStyle(),console.log("load styleMg controller success")}function editStyleInfo(type){function sucCallback(){return function(targetEditObject){function addSuc(){return function(data){preAddStyle.setId(data.objectId),addDataToGrid(preAddStyle)}}if("edit"==type)updateStyle(selectedRows[0].objectId,Style.build(targetEditObject),function(data){console.log(data),angular.merge(selectedRows[0],targetEditObject)});else{console.log(targetEditObject.images),targetEditObject.images=stringToArray(targetEditObject.images);var preAddStyle=Style.build(targetEditObject);saveStyle(preAddStyle,addSuc())}}}var selectedRows=$scope.gridApi.selection.getSelectedRows();rockUtil.openEditModal(selectedRows,type,"editStyleModal.html",sucCallback())}function stringToArray(string){var origin=angular.copy(string);return origin.split(",")}function delStyleInfo(){var delObjes=$scope.gridApi.selection.getSelectedRows();angular.forEach(delObjes,function(data,index){delStyle(data.objectId,function(data){console.log(data)})})}function setGridData(array){$scope.styleMgGridOptions.data=array}function addDataToGrid(obj){$scope.styleMgGridOptions.data.push(obj)}function getAllStyle(){dataService.getAll(Style.name,null,function(data){setGridData(data.results),console.log(data.results)})}function saveStyle(style,sucCallback){dataService.save(Style.name,style,sucCallback)}function updateStyle(objId,queryParams,sucCallback){dataService.update(Style.name,objId,queryParams,sucCallback)}function delStyle(objId,sucCallback){dataService.del(Style.name,objId,null,sucCallback)}$scope.data={},$scope.editStyleInfo=editStyleInfo,$scope.delStyleInfo=delStyleInfo,$scope.styleMgGridOptions={enableHorizontalScrollbar:uiGridConstants.scrollbars.NEVER,columnDefs:[{field:"objectId",displayName:"风格id",maxWidth:120,width:"30%"},{field:"name",displayName:"风格名称",maxWidth:150},{field:"avatar",displayName:"风格首页图",maxWidth:150},{field:"images",displayName:"风格详细图",maxWidth:150}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){var selectRowCount=gridApi.selection.getSelectedRows().length;$scope.data.oneRowSelected=!1,$scope.data.multiRowSelected=!1,1===selectRowCount&&($scope.data.oneRowSelected=!0),selectRowCount>1&&($scope.data.multiRowSelected=!0)}),gridApi.selection.on.rowSelectionChangedBatch($scope,function(rows){$scope.data.multiRowSelected=!0})}},angular.merge($scope.styleMgGridOptions,gridOpts.exportOpts,gridOpts.baseOpts),activate()}function subscribeMg($scope){function activate(){console.log("load subscribeMg controller success")}activate()}function systemMgConfig($stateProvider){$stateProvider.state("app.systemMg",{url:"/systemMg",params:{menus:null},views:{appContentView:{templateUrl:"modules/systemMg/systemMg.html",controller:"systemMg"}}}).state("app.systemMg.staffMg",{url:"/staffMg",views:{centerBoard:{templateUrl:"modules/systemMg/staffMg/staffMg.html",controller:"staffMg"}}}).state("app.systemMg.androidMg",{url:"/androidMg",views:{centerBoard:{templateUrl:"modules/systemMg/androidMg/androidMg.html",controller:"androidMg"}}})}function systemMg($scope){function activate(){}activate()}function staffMg($modal,gridOpts,uiGridConstants,rockUtil,$scope){function activate(){}function deleteStaff(){var selectedRows=$scope.gridApi.selection.getSelectedRows();angular.forEach(selectedRows,function(data,index){$scope.gridOptions.data.splice($scope.gridOptions.data.lastIndexOf(data),1)})}function editStaffInfo(type){function sucCallback(){return function(targetEditObject){"edit"==type?angular.merge(selectedRows[0],targetEditObject):$scope.gridOptions.data.push(targetEditObject)}}var selectedRows=$scope.gridApi.selection.getSelectedRows();rockUtil.openEditModal(selectedRows,type,"editStaffInfoModal.html",sucCallback())}$scope.deleteStaff=deleteStaff,$scope.editStaffInfo=editStaffInfo,$scope.data={},$scope.gridOptions={enableHorizontalScrollbar:uiGridConstants.scrollbars.NEVER,columnDefs:[{field:"id",displayName:"员工编号",maxWidth:120,width:"30%"},{field:"name",displayName:"员工姓名",maxWidth:150},{field:"username",displayName:"登录账号",maxWidth:150},{field:"password",displayName:"登录密码",maxWidth:150}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){var selectRowCount=gridApi.selection.getSelectedRows().length;$scope.data.oneRowSelected=!1,$scope.data.multiRowSelected=!1,1===selectRowCount&&($scope.data.oneRowSelected=!0),selectRowCount>1&&($scope.data.multiRowSelected=!0)}),gridApi.selection.on.rowSelectionChangedBatch($scope,function(rows){$scope.data.multiRowSelected=!0})}},$scope.gridOptions.data=[{id:1,name:"棒槌",username:"1234",password:"*****"},{id:2,name:"棒槌2",username:"1234",password:"*****"}],angular.merge($scope.gridOptions,gridOpts.exportOpts,gridOpts.baseOpts),activate()}function androidMg($modal,gridOpts,uiGridConstants,rockUtil,$scope){function activate(){}function deleteAndroid(){var selectedRows=$scope.gridApi.selection.getSelectedRows();angular.forEach(selectedRows,function(data,index){$scope.gridOptions.data.splice($scope.gridOptions.data.lastIndexOf(data),1)})}function editAndroid(type){function sucCallback(){return function(targetEditObject){"edit"==type?angular.merge(selectedRows[0],targetEditObject):$scope.gridOptions.data.push(targetEditObject)}}var selectedRows=$scope.gridApi.selection.getSelectedRows();rockUtil.openEditModal(selectedRows,type,"editAndroidModal.html",sucCallback())}console.log("androidMg"),$scope.deleteAndroid=deleteAndroid,$scope.editAndroid=editAndroid,$scope.data={},$scope.gridOptions={enableHorizontalScrollbar:uiGridConstants.scrollbars.NEVER,columnDefs:[{field:"id",displayName:"版本编号",maxWidth:120,width:"30%"},{field:"version",displayName:"版本序号",maxWidth:150},{field:"updation",displayName:"版本改动",maxWidth:250},{field:"url",displayName:"版本下载地址",maxWidth:250}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){var selectRowCount=gridApi.selection.getSelectedRows().length;$scope.data.oneRowSelected=!1,$scope.data.multiRowSelected=!1,1===selectRowCount&&($scope.data.oneRowSelected=!0),selectRowCount>1&&($scope.data.multiRowSelected=!0)}),gridApi.selection.on.rowSelectionChangedBatch($scope,function(rows){$scope.data.multiRowSelected=!0})}},angular.merge($scope.gridOptions,gridOpts.exportOpts,gridOpts.baseOpts),activate()}function userMgConfig($stateProvider){$stateProvider.state("app.userMg",{url:"/userMg",params:{menus:null},views:{appContentView:{templateUrl:"modules/userMg/userIndex.html",controller:"userMg"}}}).state("app.userMg.userList",{url:"/userList",views:{centerBoard:{templateUrl:"modules/userMg/userList/userList.html",controller:"userList"}}}).state("app.userMg.pointsMg",{url:"/pointsMg",views:{centerBoard:{templateUrl:"modules/userMg/pointsMg/pointsMg.html",controller:"pointsMg"}}}).state("app.userMg.styleCollectionMg",{url:"/styleCollectionMg",views:{centerBoard:{templateUrl:"modules/userMg/styleCollectionMg/styleCollectionMg.html",controller:"styleCollectionMg"}}}).state("app.userMg.userMsgMg",{url:"/userMsgMg",views:{centerBoard:{templateUrl:"modules/userMg/userMsgMg/userMsgMg.html",controller:"userMsgMg"}}})}function userMg($scope){function activate(){}activate()}function userList($modal,gridOpts,uiGridConstants,dataService,usersService,$scope){function activate(){function getUsersSuc(){return function(data){$scope.gridOptions.data=data.results}}function getUsersErr(){return function(error){}}usersService.get(null,getUsersSuc(),getUsersErr())}$scope.data={},$scope.gridOptions={enableHorizontalScrollbar:uiGridConstants.scrollbars.NEVER,columnDefs:[{field:"objectId",displayName:"用户id",maxWidth:120,width:"30%"},{field:"username",displayName:"用户账号",maxWidth:150},{field:"mobilePhoneNumber",displayName:"手机号码",maxWidth:150}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){console.log(row.entity);var selectRowCount=gridApi.selection.getSelectedRows().length;$scope.data.oneRowSelected=!1,$scope.data.multiRowSelected=!1,1===selectRowCount&&($scope.data.oneRowSelected=!0),selectRowCount>1&&($scope.data.multiRowSelected=!0)}),gridApi.selection.on.rowSelectionChangedBatch($scope,function(rows){$scope.data.multiRowSelected=!0})}},angular.merge($scope.gridOptions,gridOpts.exportOpts,gridOpts.baseOpts),activate()}function pointsMg($scope){function activate(){console.log("load pointsMg controller success")}activate()}function userMsgMg($scope){function activate(){console.log("load userMsgMg controller success")}activate()}function styleCollectionMg($scope){function activate(){console.log("load styleCollectionMg controller success")}activate()}angular.module("app",["app.core","app.config","app.value","app.service","app.directive","app.controller"]),angular.module("app.core",["restangular","ui.bootstrap","ui.tree","ui.grid","ui.grid.edit","ui.grid.selection","ui.grid.exporter","ui.grid.resizeColumns","ui.grid.moveColumns","ui.router"]),angular.module("app.config",["ui.router"]),angular.module("app.service",[]),angular.module("app.value",[]),angular.module("app.controller",[]),angular.module("app.directive",[]),angular.module("app.config").config(["$stateProvider","$urlRouterProvider","RestangularProvider",config]),angular.module("app.config").config(["$stateProvider","$urlRouterProvider",routeConfig]),angular.module("app.value").value("appName","易装修后台管理平台"),angular.module("app.value").value("menus",[{name:"内容管理",url:"app.contentMg",subMenus:[{name:"活动管理",url:"",subMenus:[{name:"活动管理",url:"app.contentMg.activityMg"}]},{name:"风格管理",url:"",subMenus:[{name:"风格管理",url:"app.contentMg.styleMg"},{name:"预约管理",url:"app.contentMg.subscribeMg"}]},{name:"服务管理",url:"",subMenus:[{name:"项目管理",url:"app.contentMg.projectMg"},{name:"报价管理",url:"app.contentMg.quoteMg"}]}]},{name:"用户管理",url:"app.userMg",subMenus:[{name:"用户管理",url:"",subMenus:[{name:"用户列表",url:"app.userMg.userList"},{name:"用户积分管理",url:"app.userMg.pointsMg"},{name:"风格收藏管理",url:"app.userMg.styleCollectionMg"},{name:"用户消息管理",url:"app.userMg.userMsgMg"}]}]},{name:"系统设置",url:"app.systemMg",subMenus:[{name:"员工管理",url:"",subMenus:[{name:"员工管理",url:"app.systemMg.staffMg"}]},{name:"APP管理",url:"",subMenus:[{name:"安卓版本管理",url:"app.systemMg.androidMg"}]}]}]),angular.module("app.value").value("gridOpts",{exportOpts:{exporterCsvFilename:"myFile.csv",exporterPdfDefaultStyle:{fontSize:9},exporterPdfTableStyle:{margin:[30,30,30,30]},exporterPdfTableHeaderStyle:{fontSize:10,bold:!0,italics:!0,color:"red"},exporterPdfHeader:{text:"My Header",style:"headerStyle"},exporterPdfFooter:function(currentPage,pageCount){return{text:currentPage.toString()+" of "+pageCount.toString(),style:"footerStyle"}},exporterPdfCustomFormatter:function(docDefinition){return docDefinition.styles.headerStyle={fontSize:22,bold:!0},docDefinition.styles.footerStyle={fontSize:10,bold:!0},docDefinition},exporterPdfOrientation:"portrait",exporterPdfPageSize:"LETTER",exporterPdfMaxGridWidth:500,exporterCsvLinkElement:angular.element(document.querySelectorAll(".custom-csv-link-location"))},baseOpts:{enableGridMenu:!0,enableSorting:!0,enableColumnResizing:!0,enableRowSelection:!0,enableSelectAll:!0}}),angular.module("app.controller").factory("Style",function(){function Style(objectId,name,avatar,images){this.objectId=objectId,this.name=name,this.avatar=avatar,this.images=images}return Style.prototype.toString=function(){return Style.name},Style.prototype.setId=function(id){this.objectId=id},Style.build=function(data){return new Style(data.objectId,data.name,data.avatar,data.images)},Style}),angular.module("app.controller").factory("UserInfo",function(){function UserInfo(userId,alias,roomstatus,roomarea){this.userId=userId,this.alias=alias,this.roomstatus=roomstatus,this.roomarea=roomarea}UserInfo.prototype.toString=function(){return UserInfo.name},UserInfo.prototype.setId=function(id){this.userId=id},UserInfo.prototype.setRoomStatus=function(value){this.roomstatus=value};var possibleRoles=["admin","editor","guest"];return UserInfo.possibleRoles=angular.copy(possibleRoles),UserInfo.build=function(data){return new UserInfo(data.userId,data.alias,data.roomstatus,data.roomarea)},UserInfo}),angular.module("app.service").factory("dataService",dataService),dataService.$inject=["Restangular"],angular.module("app.service").factory("usersService",usersService),usersService.$inject=["Restangular"],angular.module("app.service").factory("rockUtil",rockUtil),rockUtil.$inject=["$modal","Restangular"],angular.module("app.controller").controller("mainCtrl",mainCtrl),mainCtrl.$inject=["appName","$scope"],angular.module("app.config").config(["$stateProvider",appConfig]),angular.module("app.controller").controller("app",app),app.$inject=["menus","$scope"],angular.module("app.directive").directive("appHeader",function(){function link(scope,element,attrs){}var directive={link:link,templateUrl:"modules/component/appHeader/appHeader.html",scope:{menus:"="},restrict:"E",controller:"appHeader"};return directive}),angular.module("app.controller").controller("appHeader",appHeader),appHeader.$inject=["$state","appName","$scope"],angular.module("app.directive").directive("appSider",function(){function link(scope,element,attrs){}var directive={link:link,templateUrl:"modules/component/appSider/appSider.html",scope:{},controller:"appSider"};return directive}),angular.module("app.controller").controller("appSider",appSider),appSider.$inject=["$stateParams","$state","$scope"],angular.module("app.config").config(["$stateProvider",contentMgConfig]),angular.module("app.controller").controller("contentMg",contentMg),contentMg.$inject=["$scope"],angular.module("app.controller").controller("activityMg",activityMg),activityMg.$inject=["$scope"],angular.module("app.controller").controller("projectMg",projectMg),projectMg.$inject=["$scope"],angular.module("app.controller").controller("quoteMg",quoteMg),quoteMg.$inject=["$scope"],angular.module("app.controller").controller("styleMg",styleMg),styleMg.$inject=["Style","gridOpts","uiGridConstants","dataService","rockUtil","$scope"],angular.module("app.controller").controller("subscribeMg",subscribeMg),subscribeMg.$inject=["$scope"],angular.module("app.config").config(["$stateProvider",systemMgConfig]),angular.module("app.controller").controller("systemMg",systemMg),systemMg.$inject=["$scope"],angular.module("app.controller").controller("staffMg",staffMg),staffMg.$inject=["$modal","gridOpts","uiGridConstants","rockUtil","$scope"],angular.module("app.controller").controller("androidMg",androidMg),androidMg.$inject=["$modal","gridOpts","uiGridConstants","rockUtil","$scope"],angular.module("app.config").config(["$stateProvider",userMgConfig]),angular.module("app.controller").controller("userMg",userMg),userMg.$inject=["$scope"],angular.module("app.controller").controller("userList",userList),userList.$inject=["$modal","gridOpts","uiGridConstants","dataService","usersService","$scope"],angular.module("app.controller").controller("pointsMg",pointsMg),pointsMg.$inject=["$scope"],angular.module("app.controller").controller("userMsgMg",userMsgMg),userMsgMg.$inject=["$scope"],angular.module("app.controller").controller("styleCollectionMg",styleCollectionMg),styleCollectionMg.$inject=["$scope"];